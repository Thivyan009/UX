// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String?
  email     String    @unique
  password  String?
  image     String?
  role      Role      @default(USER)
  plan      Plan      @default(BASIC)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  projects  Project[]
}

model Project {
  id          String    @id @default(cuid())
  name        String
  description String?
  type        String
  status      Status    @default(ACTIVE)
  progress    Int       @default(0)
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  screens     Screen[]
  reports     Report[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Screen {
  id          String    @id @default(cuid())
  name        String
  description String?
  type        String
  imageUrl    String
  status      String    @default("pending")
  projectId   String
  project     Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  issues      Issue[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Report {
  id          String    @id @default(cuid())
  name        String
  projectId   String
  project     Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  issues      Issue[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Issue {
  id             String   @id @default(cuid())
  title          String
  description    String
  severity       Severity @default(MINOR)
  recommendation String?
  screenId       String
  screen         Screen   @relation(fields: [screenId], references: [id], onDelete: Cascade)
  reportId       String
  report         Report   @relation(fields: [reportId], references: [id], onDelete: Cascade)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum Plan {
  BASIC
  PRO
  ENTERPRISE
}

enum Status {
  ACTIVE
  COMPLETED
  ARCHIVED
}

enum Severity {
  CRITICAL
  MODERATE
  MINOR
}
